MY SOLUTION 
-------------------------------
Maintain an output array with (char, "1") initially
Then for every duplicate, found the index of its dupe and increased its count
-------------------------------

public class Solution {
    public String solve(String A) {
        
        char[] input = A.toCharArray();
        ArrayList<String> output = new ArrayList<>();
        
        for(int i=0; i< input.length; i++){
            String element = String.valueOf(input[i]);
            if(output.contains(element) == false){
                output.add(element);
                output.add("1");
            }
            else{
                int indexOfDupe = output.indexOf(element);
                int count = Integer.parseInt(output.get(indexOfDupe + 1));
                output.set(indexOfDupe + 1, String.valueOf(count + 1));   
            }
        }
        
        StringBuilder sb = new StringBuilder();
        for(int i=0; i <output.size(); i++ ){
            sb.append(output.get(i));
        }
        
        return sb.toString();
    }
}


LEETCODE SOLUTION
---------------------------------------------
Maintain frequency array of characters. and also maintain visited array so that we can maintain which characters we have already written their frequency.
----------------------------------------------

public class Solution {
    public String solve(String A) {
        Map<Character,Integer> mp=new LinkedHashMap<>();
        for(int i=0;i<A.length();i++){
            mp.put(A.charAt(i),mp.getOrDefault(A.charAt(i),0)+1);
        }
        String res="";
        for(char ch:mp.keySet()){
            int x=mp.get(ch);
            res+=""+ch+""+x;
        }
        return res;
    }
}



LEARNINGS
-------------------------------------
1. CONVERT ARRAYLIST<STRING> TO STRING

ArrayList<String> list = new ArrayList<String>();
list.add("one");
list.add("two");
list.add("three");

StringBuilder sb = new StringBuilder();
for (String s : list)
{
    sb.append(s);
}

System.out.println(sb.toString());

---------------------------------------
2. ARRAYLIST SET METHOD
public E set(int index, E element)

--------------------------------------
3. INTEGER TO STRING CONVERSION

  // using valueOf() Method
  String str3 = String.valueOf(int i);
  
------------------------------------
4. STRING TO INTEGER

int t=Integer.parseInt(str);

---------------------------------
5. CHARACTER TO STRING

String.valueOf(char c)

---------------------------------------
6. ARRAYLIST INDEXOF(ELEM) METHOD

public int indexOf(Object o)
obj : The element to search for.

-------------------------------------
7. STRING TO CHAR ARRAY

str.toCharArray();
------------------------------------

  

