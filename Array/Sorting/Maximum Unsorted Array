public class Solution {
    public int[] subUnsort(int[] A) {
        
        
        // 1 3 2 4 5
        // 1 2 3 4 5
        
        
        // 1 2 3 4 5
        // 1 3 2 4 5
        
        
        int[][] AwithIndex = new int[A.length][2];
        
        int index =0;
        for(int i: A){
            AwithIndex[index][0] = i;
            AwithIndex[index][1] = index++;
        }
        
        int[][] B = new int[A.length][2];
        
        // to copy 2 D array
        for(int i=0; i<AwithIndex.length; i++)
            for(int j=0; j<AwithIndex[i].length; j++)
                B[i][j]=AwithIndex[i][j];

        // sort AwithIndex with first column
        Arrays.sort(AwithIndex, new Comparator<int[]>() {
            public int compare(int[] a, int[] b) {
                return Integer.compare(a[0], b[0]);
            }
        });
        
        // till now constraint of A[i] <= A[j]. is sorted
        int start = -1;
        int end = -1;
        
        for(int i = 0; i< A.length; i++){
            //System.out.println(B[i][1] +"  "+AwithIndex[i][1]);
            if(B[i][1] != AwithIndex[i][1]){
                if(start == -1) start = i;
                else end = i;
            }
        }
        
        if(start == -1) return new int[]{-1};
        else return new int[]{start, end};
        
        

    }
}
