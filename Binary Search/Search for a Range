public class Solution {
    // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    public int[] searchRange(final int[] A, int B) {
        int[] res = new int[2];
        binarySearch(A, A.length, B, res);
        return res;
    }
    
  public void binarySearch(int arr[], int n, int key, int[] res)
  {
    int left = 0, right = n-1;
         
    int mid = 0;
    while (left <= right) {
      mid = left + (right - left)/2;
 
      // Check if key is present in array
      if (arr[mid] == key) { 
        
        // star part
        while (mid-1 >= 0 && arr[mid -1] == key)
          mid--;
          
        res[0] = mid; 

        // star part
        while (mid + 1 < n && arr[mid + 1] == key)
          mid++;
              
        res[1] = mid;
    
        break;
      }
 
      else if (arr[mid] > key)
        right = mid - 1;
 
      else
        left = mid + 1;
    }
 
    
    //Star part 
    {
        if(mid > 0 && arr[mid] < key){
            res[0] = -1;
            res[1] = -1;
        }
        
        if(arr[mid] > key){
            res[0] = -1;
            res[1] = -1;
        }
    }
    
  }
 

}
